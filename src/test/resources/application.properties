server.servlet.context-path=/sample

spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
#################################################
########PersistenceMultitenancyInformations H2######
#################################################
## Tenant 1 database ##
#multitenant.datasources.tenant1.url=jdbc:h2:mem:userst1
#multitenant.datasources.tenant1.username=sa
#multitenant.datasources.tenant1.password=
#multitenant.datasources.tenant1.driverClassName=org.h2.Driver

## Tenant 2 database ##
#multitenant.datasources.tenant2.url=jdbc:h2:mem:userst2
#multitenant.datasources.tenant2.username=sa
#multitenant.datasources.tenant2.password=
#multitenant.datasources.tenant2.driverClassName=org.h2.Driver

enc.password=herzum
enc.salt=jsahfdkjaf
enc.iv=ifdncstfohenerfr

entity.packages=net.gvcc.goffice.multitenancy.entity
#################################################
########PersistenceMultitenancyInformations######
#################################################
spring.jpa.database=h2
multitenancy.type=database
###############################################
############Schema Multitenancy##############
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.datasource.platform=h2
#spring.datasource.name=dbSchemaBolzano
#spring.jpa.properties.hibernate.default_schema=dbSchemaBolzano
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create
#spring.datasource.initialization-mode=embedded
#spring.datasource.url=jdbc:postgresql://gofficedbdev.gvcc.net:5432/gofficedb
#spring.datasource.username=${GO2_NOTIFICATION_USER}
#spring.datasource.password=${GO2_NOTIFICATION_PWD}
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.sqlDialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Postgresql
#spring.datasource.url=jdbc:postgresql://localhost:5432/testdb
#spring.datasource.username=kk
#spring.datasource.password=kk
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# MySQL
#spring.datasource.url=jdbc:mysql://localhost:3306/gofficedb
#spring.datasource.username=goffice
#spring.datasource.password=goffice
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.generate-ddl=true
hibernate.hbm2ddl.auto=create-drop
spring.jpa.show-sql=true
###############################################
############Database Multitenancy##############
#h2
#multitenant.datasources.tenanta.url=jdbc:h2:mem:userst1
#multitenant.datasources.tenanta.username=sa
#multitenant.datasources.tenanta.password=
#multitenant.datasources.tenanta.driverClassName=org.h2.Driver
##multitenant.datasources.tenantb.url=jdbc:h2:mem:userst1
#multitenant.datasources.tenantb.username=sa
#multitenant.datasources.tenantb.password=
#multitenant.datasources.tenantb.driverClassName=org.h2.Driver
## Tenant 1 database ##
#multitenant.datasources.tenanta.url=jdbc:postgresql://localhost:5432/testdb
#multitenant.datasources.tenanta.username=kk
#multitenant.datasources.tenanta.password=kk
#multitenant.datasources.tenanta.driverClassName=org.postgresql.Driver
## Tenant 2 database ##
#multitenant.datasources.tenantb.url=jdbc:mysql://localhost:3306/gofficedb
#multitenant.datasources.tenantb.username=goffice
#multitenant.datasources.tenantb.password=goffice
#multitenant.datasources.tenantb.driverClassName=com.mysql.cj.jdbc.Driver
############Encryption##############
#enc.password=tobeencrypted
#enc.salt=jsahfdkjaf
#enc.iv=ifdncstfohenerfh


########################################
##################################keycloak conf
goffice.common.security.urltoken=${GO2_KEYCLOAK_TOKEN_URL:https://goffice2-dev.gvcc.net/auth/realms/goffice/protocol/openid-connect/token}
#goffice.common.security.granttype=${GO2_KEYCLOAK_TOKEN_GRANTTYPE:password}
#goffice.common.security.clientid=${GO2_KEYCLOAK_TOKEN_CLIENT_ID:admin-cli}
goffice.common.security.username=${GO2_KEYCLOAK_TOKEN_USERNAME:changeit}
goffice.common.security.password=${GO2_KEYCLOAK_TOKEN_PASSWORD:changeit}
goffice.common.security.server.keycloak=${GO2_KEYCLOAK_SERVER_URL:https://goffice2-dev.gvcc.net/auth}
goffice.common.security.clientid=${GO2_KEYCLOAK_TOKEN_CLIENT_ID:securityServiceGoffice}
goffice.common.security.realm=${GO2_KEYCLOAK_TOKEN_REALM:goffice}
goffice.common.security.granttype=${GO2_KEYCLOAK_TOKEN_GRANTTYPE:client_credentials}
goffice.common.security.clientsecret=${GO2_KEYCLOAK_TOKEN_CLIENT_SECRET:96a32fa2-4e65-4977-98c6-e7e272ee6db2}
goffice.common.security.createtoken=true
service.publicUrls=/public/**/*,/actuator/**/*


#goffice.common.persistence.tenant.file=C:/Users/marco.mancuso/git/goffice-common-persistence/src/test/resources/tenants.json
goffice.common.persistence.tenant.file=classpath:tenants.json



goffice.common.mail.smtphost=${GO2_SMTP_HOST:localhost}
goffice.common.mail.smtpport=${GO2_SMTP_PORT:2500}
goffice.common.mail.username=
goffice.common.mail.password=
goffice.common.mail.smtpauth=false
goffice.common.mail.smtpstarttls=false
goffice.common.mail.debug=false

goffice.common.troubleshooting.mail.from=troubleshooting-dev@gvcc.net
goffice.common.troubleshooting.mail.to=renzo.poli@gvcc.net
goffice.common.troubleshooting.mail.cc=sara.tumiati@gvcc.net
goffice.common.troubleshooting.mail.subject=testsubject
goffice.common.troubleshooting.mail.body=testbody


multitenancy.troubleshooting.subject=[MULTITENANCY-PERSISTENCE - DEV] DBMS initialization ERRORS
#multitenancy.troubleshooting.body=
